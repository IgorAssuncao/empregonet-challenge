version: "3.4"

services:
  mongo1:
    image: "mongo:3.6"
    container_name: mongodb-master
    hostname: mongodb-master
    depends_on:
      - mongo2
      - mongo3
    environment:
      MONGO_INITDB_DATABASE: test
      MONGO_REPLICA_SET_NAME: rs0
    ports:
      - "27017:27017"
    healthcheck:
      test: >-
        test $$(echo "rs.initiate({ \
          _id: 'rs0', \
          members: [ \
            { _id: 0, host: 'mongo1:27017', priority: 2 }, \
            { _id: 1, host: 'mongo2:27018' }, \
            { _id: 2, host: 'mongo3:27019', arbiterOnly: true }, \
          ] \
        }).ok || rs.status().ok" | mongo --quiet) -eq 1 \
      interval: 10s
      start_period: 1s
    command: ["--replSet", "rs0", "--bind_ip_all"]
  mongo2:
    image: "mongo:3.6"
    container_name: mongodb-slave
    hostname: mongodb-slave
    environment:
      MONGO_INITDB_DATABASE: test
      MONGO_REPLICA_SET_NAME: rs0
    ports:
      - "27018:27018"
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27018"]
  mongo3:
    image: "mongo:3.6"
    container_name: mongodb-arbiter
    hostname: mongodb-arbiter
    environment:
      MONGO_INITDB_DATABASE: test
      MONGO_REPLICA_SET_NAME: rs0
    ports:
      - "27019:27019"
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27019"]
